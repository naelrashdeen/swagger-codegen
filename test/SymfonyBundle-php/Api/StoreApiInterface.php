<?php
/**
 * StoreApiInterface
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Server
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Swagger Petstore
 *
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Server\Api;

use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Swagger\Server\Model\Order;
use maparray&lt;string,int&gt;;
use Symfony\Component\HttpKernel\Exception\BadRequestHttpException;

/**
 * StoreApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  Swagger\Server\Api
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
interface StoreApiInterface
{

    /**
     * Sets authentication method api_key
     *
     * @param string $value Value of the api_key authentication method.
     *
     * @return void
     */
    public function setapi_key($value);

    /**
     * Operation deleteOrder
     *
     * Delete purchase order by ID
     *
     * @param  int $order_id  ID of the order that needs to be deleted (required)
     *
     * @throws BadRequestHttpException  Invalid ID supplied
     * @throws NotFoundHttpException  Order not found
     */
    public function deleteOrder($order_id);

    /**
     * Operation getInventory
     *
     * Returns pet inventories by status
     *
     *
     * @return maparray&lt;string,int&gt;  successful operation
     *
     */
    public function getInventory();

    /**
     * Operation getOrderById
     *
     * Find purchase order by ID
     *
     * @param  int $order_id  ID of pet that needs to be fetched (required)
     *
     * @return Order  successful operation
     *
     * @throws BadRequestHttpException  Invalid ID supplied
     * @throws NotFoundHttpException  Order not found
     */
    public function getOrderById($order_id);

    /**
     * Operation placeOrder
     *
     * Place an order for a pet
     *
     * @param  Order $body  order placed for purchasing the pet (required)
     *
     * @return Order  successful operation
     *
     * @throws BadRequestHttpException  Invalid Order
     */
    public function placeOrder(Order $body);
}
