<?php

/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\Http\Controllers;

use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Validator\ValidatorInterface;
use JMS\Serializer\Serializer;
use Symfony\Component\HttpKernel\Exception\BadRequestHttpException;

interface UserApiServiceInterface
{

    /**
     * Operation createUser
     *
     * Create user.
     *
     * @param array $inputData Associative array containing the input data
     *
     * @return OutputData 
     */
    public function createUser(array $inputData);
        
    /**
     * Operation createUsersWithArrayInput
     *
     * Creates list of users with given input array.
     *
     * @param array $inputData Associative array containing the input data
     *
     * @return OutputData 
     */
    public function createUsersWithArrayInput(array $inputData);
        
    /**
     * Operation createUsersWithListInput
     *
     * Creates list of users with given input array.
     *
     * @param array $inputData Associative array containing the input data
     *
     * @return OutputData 
     */
    public function createUsersWithListInput(array $inputData);
        
    /**
     * Operation loginUser
     *
     * Logs user into the system.
     *
     * @param array $inputData Associative array containing the input data
     *
     * @return OutputData 
     */
    public function loginUser(array $inputData);
        
    /**
     * Operation logoutUser
     *
     * Logs out current logged in user session.
     *
     * @param array $inputData Associative array containing the input data
     *
     * @return OutputData 
     */
    public function logoutUser(array $inputData);
        
    /**
     * Operation deleteUser
     *
     * Delete user.
     *
     * @param array $inputData Associative array containing the input data
     *
     * @return OutputData 
     */
    public function deleteUser(array $inputData);
        
    /**
     * Operation getUserByName
     *
     * Get user by user name.
     *
     * @param array $inputData Associative array containing the input data
     *
     * @return OutputData 
     */
    public function getUserByName(array $inputData);
        
    /**
     * Operation updateUser
     *
     * Updated user.
     *
     * @param array $inputData Associative array containing the input data
     *
     * @return OutputData 
     */
    public function updateUser(array $inputData);
        

}
